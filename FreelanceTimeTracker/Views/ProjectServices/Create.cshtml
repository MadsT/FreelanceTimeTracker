@model FreelanceTimeTracker.Models.ProjectService

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ProjectService</h4>
        <hr />
        @Html.HiddenFor(model => model.Project.ProjectID)
        @Html.HiddenFor(model => model.Service.ServiceiD)

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Project.Client.ClientName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClientName", null, "Select a client", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Project, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", new SelectList(string.Empty, "Value", "Text"), "Please select a client", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServiceID, "ServiceID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServiceID", null, "Select a service", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HoursWorked, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HoursWorked, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HoursWorked, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

    $(document).ready(function () {
        //Dropdownlist Selectedchange event
        $("#ClientName").change(function () {
            $("#ProjectId").empty();
            $.ajax({
                type: 'GET',
                url: '@Url.Action("PopulateProjectListInCreate")', 

                dataType: 'json',

                data: { selectedClientId: $("#ClientName").val() },

                success: function (projects) {

                    $.each(JSON.parse(projects), function (i, project) {
                        $("#ProjectId").append('<option value="' + project.ProjectID + '">' + project.ProjectName + '</option>');
                    
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve projects.' + ex);
                }
            });
            return false;
        })
    });
</script>  
}
